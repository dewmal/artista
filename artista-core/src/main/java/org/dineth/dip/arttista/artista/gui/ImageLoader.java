/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package org.dineth.dip.arttista.artista.gui;

import java.io.File;
import java.io.IOException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.ImageIcon;
import org.dineth.dip.arttista.artista.core.ImageFile;
import org.openimaj.image.ImageUtilities;
import org.openimaj.image.MBFImage;

/**
 *
 * @author dewmal
 */
public class ImageLoader extends javax.swing.JInternalFrame {

    private ImageFile imFile;

    /**
     * Creates new form ImageLoader
     */
    public ImageLoader(ImageFile imFile) throws IOException {
        
        initComponents();
        this.imFile = imFile;
        MBFImage readF = ImageUtilities.readMBF(imFile.getImageFile());


        //DisplayUtilities.display(readF);
        
        ImageIcon icon = new ImageIcon(ImageUtilities.createBufferedImage(readF));
        jLabel1.setSize(readF.getWidth(), readF.getHeight());
        jLabel1.setIcon(icon);
        this.setSize(jLabel1.getWidth() + 10, jLabel1.getHeight() + jToolBar1.getHeight() + 5);
        
        
        
        
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jToolBar1 = new javax.swing.JToolBar();
        btHistogram = new javax.swing.JButton();

        setClosable(true);
        setIconifiable(true);
        setMaximizable(true);
        setResizable(true);
        addHierarchyBoundsListener(new java.awt.event.HierarchyBoundsListener() {
            public void ancestorMoved(java.awt.event.HierarchyEvent evt) {
            }
            public void ancestorResized(java.awt.event.HierarchyEvent evt) {
                formAncestorResized(evt);
            }
        });

        jToolBar1.setRollover(true);

        btHistogram.setText("Histogram");
        btHistogram.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btHistogramActionPerformed(evt);
            }
        });
        jToolBar1.add(btHistogram);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jToolBar1, javax.swing.GroupLayout.DEFAULT_SIZE, 388, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jToolBar1, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(8, 8, 8)
                .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, 220, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void formAncestorResized(java.awt.event.HierarchyEvent evt) {//GEN-FIRST:event_formAncestorResized
        System.out.println(this.getSize().height + " " + this.getSize().width);
    }//GEN-LAST:event_formAncestorResized

    private void btHistogramActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btHistogramActionPerformed
        File imageFile = imFile.getImageFile();
        try {
            MBFImage mbfi=ImageUtilities.readMBF(imageFile);
            
            mbfi=mbfi.inverse();
            
            jLabel1.setIcon(new ImageIcon(mbfi.toByteImage()));
            
            
            
            
        } catch (IOException ex) {
            Logger.getLogger(ImageLoader.class.getName()).log(Level.SEVERE, null, ex);
        }
        
        
        
        
    }//GEN-LAST:event_btHistogramActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btHistogram;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JToolBar jToolBar1;
    // End of variables declaration//GEN-END:variables
}
